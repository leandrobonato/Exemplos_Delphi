unit TestuntCalculadora;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, Vcl.Dialogs, Winapi.Windows, System.SysUtils, Vcl.Graphics,
  System.Variants, Winapi.Messages, Vcl.StdCtrls, Vcl.Controls, Vcl.Forms,
  untCalculadora, System.Classes;

type
  TestTForm2 = class(TTestCase)
  strict private
    FForm2: TForm2;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSomar;
    procedure TestSubtrair;
    procedure TestMultiplicar;
    procedure TestDividir;
  end;

implementation

procedure TestTForm2.SetUp;
begin
  FForm2 := TForm2.Create(nil);
end;

procedure TestTForm2.TearDown;
begin
  FForm2.Free;
  FForm2 := nil;
end;

procedure TestTForm2.TestSomar;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  ANumero1 := 2;
  ANumero2 := 2;

  ReturnValue := FForm2.Somar(ANumero1, ANumero2);

  CheckEquals(4, ReturnValue, 'A função somar falhou');
end;

procedure TestTForm2.TestSubtrair;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  ANumero1 := 2;
  ANumero2 := 2;

  ReturnValue := FForm2.Subtrair(ANumero1, ANumero2);

  CheckEquals(0, ReturnValue, 'A função subtrair falhou');
end;

procedure TestTForm2.TestMultiplicar;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  ANumero1 := 2;
  ANumero2 := 3;

  ReturnValue := FForm2.Multiplicar(ANumero1, ANumero2);

  CheckEquals(6, ReturnValue, 'A função multiplicar falhou');
end;

procedure TestTForm2.TestDividir;
var
  ReturnValue: Integer;
  ANumero2: Integer;
  ANumero1: Integer;
begin
  ANumero1 := 2;
  ANumero2 := 2;

  ReturnValue := FForm2.Dividir(ANumero1, ANumero2);

  CheckEquals(1, ReturnValue, 'A função dividir falhou');
end;

initialization
  RegisterTest(TestTForm2.Suite);

end.
